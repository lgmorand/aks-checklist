[
  {
    "title": "Implement a proper Liveness probe",
    "priority": "High",
    "description": "Many applications running for long periods of time eventually transition to broken states, and cannot recover except by being restarted. Kubernetes provides liveness probes to detect and remedy such situations. The probe is here to tell kubernetes to restart your pod when it is not responding anymore",
    "documentation": [
      {
        "title": "Configure Liveness, Readiness probes",
        "url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/"
      }
    ],
    "tags": ["all", "development"]
  },
  {
    "title": "Implement a proper Readiness probe",
    "priority": "Medium",
    "description": "Understand the needs of your application to pick the right storage. Use high performance, SSD-backed storage for production workloads. Plan for network-based storage when there is a need for multiple concurrent connections.",
    "detail":"Sometimes, applications are temporarily unable to serve traffic. For example, an application might need to load large data or configuration files during startup, or depend on external services after startup. In such cases, you don’t want to kill the application, but you don’t want to send it requests either. Kubernetes provides readiness probes to detect and mitigate these situations. A pod with containers reporting that they are not ready does not receive traffic through Kubernetes Services.",
    "documentation": [
      {
        "title": "Configure Liveness, Readiness probes",
        "url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/"
      }
    ],
    "tags": ["all", "development"]
  },
  {
    "title": "Implement a proper prestop probe",
    "priority": "Low",
    "description": "This hook is called immediately before a container is terminated due to an API request or management event such as liveness probe failure, preemption, resource contention and others. It can be used when you have critical process you want to finish or save when your pod is destroyed for any reason",
    "documentation": [
      {
        "title": "Container Lifecycle Hooks",
        "url": "https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/"
      }
    ],
    "tags": ["all", "development"]
  },
  {
    "title": "Run more than one replica for your Deployment",
    "priority": "Medium",
    "description": "Ensure that your application always configure proper replicas to ensure resiliency.",
    "tags": ["all", "development"]
  }
]